name: SonarQube Analysis

on:
  push:
    branches:
      - main

jobs:
  sonarQubeAnalysis:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Install dependencies
      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          pip install nbconvert pytest pytest-cov coverage

      # Convert .ipynb notebooks to .py
      - name: Convert Notebooks to Python scripts
        run: |
          jupyter nbconvert --to script notebooks/*.ipynb --output-dir notebooks

          # Rename .txt files to .py
          for file in notebooks/*.txt; do
            mv "$file" "${file%.txt}.py"
          done
          
          # Verify the result
          ls notebooks
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd):$(pwd)/notebooks" >> $GITHUB_ENV
          
      - name: Run Tests with Coverage
        run: |
          pytest tests --cov=notebooks --cov-report=xml

      # Run SonarScanner
      - name: Run SonarScanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          export PATH="$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin"
          sonar-scanner -Dsonar.projectKey=databricks_project \
                        -Dsonar.projectName=DatabricksProject \
                        -Dsonar.projectVersion=1.0 \
                        -Dsonar.sources=notebooks \
                        -Dsonar.python.coverage.reportPaths=coverage.xml \
                        -Dsonar.python.version=3.x \
                        -Dsonar.host.url=http://20.55.75.25:9000 \
                        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          deploy-to-dev:
              name: Deploy to Dev Environment
              runs-on: ubuntu-latest
              needs: sonarQubeAnalysis
              steps:
                # Checkout the repository
                - name: Checkout Repository
                  uses: actions/checkout@v3
          
                # Set up Azure CLI
                - name: Set up Azure CLI
                  uses: azure/CLI@v1
          
                # Deploy Notebooks to Dev
                - name: Deploy Notebooks to Dev
                  run: |
                    az databricks workspace import_dir \
                      --overwrite true \
                      --source-path $(notebooksPath) \
                      --target-path /Workspace/Dev \
                      --workspace-name ${{ secrets.DEV_WORKSPACE_NAME }} \
                      --resource-group ${{ secrets.DEV_RESOURCE_GROUP }} \
                      --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            deploy-to-prod:
            name: Deploy to Prod Environment
            runs-on: ubuntu-latest
            needs: deploy-to-dev
            steps:
              # Checkout the repository
              - name: Checkout Repository
                uses: actions/checkout@v3
        
              # Set up Azure CLI
              - name: Set up Azure CLI
                uses: azure/CLI@v1
        
              # Deploy Notebooks to Prod
              - name: Deploy Notebooks to Prod
                run: |
                  az databricks workspace import_dir \
                    --overwrite true \
                    --source-path $(notebooksPath) \
                    --target-path /Workspace/Prod \
                    --workspace-name ${{ secrets.PROD_WORKSPACE_NAME }} \
                    --resource-group ${{ secrets.PROD_RESOURCE_GROUP }} \
                    --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
